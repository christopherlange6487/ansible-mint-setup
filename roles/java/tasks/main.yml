---
- name: Include OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"
# See: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199 and
# https://github.com/geerlingguy/ansible-role-java/issues/64
- name: Ensure 'man' directory exists.
  file:
    path: /usr/share/man/man1
    state: directory
    recurse: true
    mode: 0755
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_major_version | int >= 18
- name: Update apt cache.
  apt: update_cache=yes cache_valid_time=3600
- name: Install Java and associated packages
  apt:
    pkg: "{{ java_pkgs }}"
- name: Install JDK(s) via asdf
  include_role:
    name: asdf
  vars:
    asdf_plugins:
      - name: java
        versions: "{{ java_versions }}"
        global: "{{ java_default_version }}"
- name: Check if Maven 3 already installed
  stat:
    path: /opt/apache-maven-{{ maven3_version }}/bin/mvn
  register: mvn3_bin
- name: Download Maven 3
  get_url:
    url: http://archive.apache.org/dist/maven/maven-3/{{ maven3_version }}/binaries/apache-maven-{{ maven3_version }}-bin.tar.gz
    checksum: "sha512:{{ maven3_sha512 }}"
    dest: /tmp
  when: not mvn3_bin.stat.exists
- name: Unarchive Maven 3
  unarchive:
    src: /tmp/apache-maven-{{ maven3_version }}-bin.tar.gz
    dest: /opt
    remote_src: yes
  when: not mvn3_bin.stat.exists
- name: Symlink default mvn
  file:
    src: "apache-maven-{{ maven3_version }}"
    dest: "/opt/apache-maven"
    state: link
- name: Symlink mvn bin
  file:
    src: "/opt/apache-maven/bin/mvn"
    dest: "/usr/local/bin/mvn"
    state: link
- name: Check if Payara {{ payara_version }} already installed
  stat:
    path: /opt/payara-{{ payara_version }}/bin/asadmin
  register: payara_bin
  tags: payara
- name: Download Payara {{ payara_version }}
  get_url:
    url: https://s3-eu-west-1.amazonaws.com/payara.fish/Payara+Downloads/{{ payara_version }}/payara-{{ payara_version }}.tar.gz
    checksum: "sha256:{{ payara_sha256 }}"
    dest: /tmp/payara-{{ payara_version }}.tar.gz
  when: not payara_bin.stat.exists
  tags: payara
- name: Create Payara {{ payara_version }} directory
  file:
    path: /opt/payara-{{ payara_version }}
    state: directory
    mode: 0755
  tags: payara
- name: Unarchive Payara {{ payara_version }}
  unarchive:
    src: /tmp/payara-{{ payara_version }}.tar.gz
    extra_opts:
      - "--strip-components=1"
    dest: /opt/payara-{{ payara_version }}
    remote_src: yes
  when: not payara_bin.stat.exists
  tags: payara
- name: Symlink default Payara
  file:
    src: "payara-{{ payara_version }}"
    dest: "/opt/payara"
    state: link
  tags: payara
- name: Add asadmin executable
  copy:
    src: asadmin
    dest: /usr/local/bin
    mode: 0755
  tags: payara
