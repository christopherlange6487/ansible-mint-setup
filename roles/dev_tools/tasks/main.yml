---
- name: Add dotenv approach
  blockinfile:
    path: ~/.bashrc
    marker: "# {mark} ANSIBLE MANAGED BLOCK dotenv"
    block: |
      # .env loading in the shell
      # see https://stackoverflow.com/a/34093548/1960601
      dotenv () {
        set -a
        [ -f .env ] && . .env
        set +a
      }
  become: no
- name: Update apt cache.
  apt: update_cache=yes cache_valid_time=3600
- name: Install dirmngr in order to be able to install the apt signing key
  apt:
    pkg:
      - dirmngr
      - apt-transport-https
      - unzip
- name: Install various dev packages
  apt:
    pkg: "{{ various_dev_apt_packages }}"
  tags: various_dev_apt_packages
- name: Add Insomnia signing key on remote server to keyring
  apt_key:
    url: https://insomnia.rest/keys/debian-public.key.asc
    id: 8756C4F765C9AC3CB6B85D62379CE192D401AB61
    state: present
  tags: insomnia
- name: Add apt repo for Insomnia
  apt_repository:
    repo: "deb [trusted=yes arch=amd64] https://download.konghq.com/insomnia-ubuntu/ default all"
    state: present
  tags: insomnia
- name: Install Insomnia
  apt:
    pkg: insomnia
  tags: insomnia
- name: Install ansible
  block:
  - name: Add PPA Key for ansible
    apt_key:
      id: 6125E2A8C77F2818FB7BD15B93C4A3FD7BB9C367
      keyserver: keyserver.ubuntu.com
  - name: Extract Ubuntu distribution base name (works on linux mint as well)
    command: grep -oP 'UBUNTU_CODENAME=\K.*' /etc/os-release
    register: ansible_ubuntu_distro
    changed_when: False
    when: ansible_distribution != "Debian" # also includes mint
  - name: Set ansible ppa distribution name
    set_fact:
      ansible_ppa_distro: "{{ 'trusty' if ansible_distribution == 'Debian' else ansible_ubuntu_distro.stdout }}"
  - name: Add ansible PPA (deb) if available
    apt_repository:
      repo: deb http://ppa.launchpad.net/ansible/ansible/ubuntu {{ ansible_ppa_distro }} main
  - name: Add ansible PPA (deb-src) if available
    apt_repository:
      repo: deb-src http://ppa.launchpad.net/ansible/ansible/ubuntu {{ ansible_ppa_distro }} main
  always:
  - name: Install ansible packages
    apt:
      pkg: ansible
  - name: Setup ansible python interpreter version
    ini_file:
      path: /etc/ansible/ansible.cfg
      section: defaults
      option: "{{ item.option }}"
      value: "{{ item.value }}"
      mode: '0644'
    with_items:
      - option: interpreter_python
        value: /usr/bin/python3
      - option: nocows
        value: "1"
      - option: stdout_callback
        value: yaml
      - option: stderr_callback
        value: yaml
  tags: ansible
- name: Install ansible-lint
  block:
  - name: Add stretch-backports so that ansible-lint is available
    apt_repository:
      repo: deb http://deb.debian.org/debian stretch-backports main
    when: ansible_distribution == "Debian" and ansible_distribution_major_version == "9"
    register: stretch_backports
  - name: Install ansible-lint via package manager
    apt:
      pkg: ansible-lint
      default_release: "{{ 'stretch-backports' if not stretch_backports.skipped is defined else None }}"
    tags: ansible_lint
  rescue:
  - name: Install python3-cryptography
    apt:
      pkg: python3-cryptography
  - name: Install ansible-lint without package manager
    include_role:
      name: baztian.pip_venv
      apply:
        tags:
          - ansible_lint
    vars:
        pkg: ansible-lint
        version: "{{ ansible_lint_version }}"
    tags: ansible_lint
- name: Install ansible-play-role-local script
  get_url:
    url: '{{ ansible_play_role_local_url }}'
    dest: /usr/local/bin/ansible-play-role-local
    mode: 0755
    force: yes
- name: Install libssl-dev (molecule requirement)
  apt:
    pkg: libssl-dev
  tags: molecule
- name: Install molecule
  include_role:
    name: baztian.pip_venv
    apply:
      tags:
        - molecule
  vars:
      pkg: molecule{{ molecule_flavour }}
      dir: molecule
      version: "{{ molecule_version }}"
  # Skip for ubuntu 16.04 or Linux mint based on that version
  when: not (ansible_distribution != "Debian" and ansible_distribution_major_version == "16")
  tags: molecule
- name: Install yq
  include_role:
    name: baztian.pip_venv
    apply:
      tags:
        - yq
  vars:
      pkg: yq
      version: 2.8.0
  tags: yq
# - name: Install jpterm
#   include_role:
#     name: baztian.pip_venv
#     apply:
#       tags:
#         - jpterm
#   vars:
#       pkg: jmespath-terminal
#       version: 0.2.1
#       bin: jpterm
#   tags: jpterm
- name: Check if jid already installed
  stat:
    path: /opt/jid-{{ jid_version }}
  register: jid_directory
  tags: jid
- name: Download jid
  get_url:
    url: "https://github.com/simeji/jid/releases/download/v{{ jid_version }}/jid_linux_amd64.zip"
    checksum: "sha256:{{ jid_sha256 }}"
    dest: "/tmp/jid-{{ jid_version }}.zip"
  tags: jid
  when: not jid_directory.stat.exists
- name: Create jid directory
  file:
    path: "/opt/jid-{{ jid_version }}"
    state: directory
    mode: 0775
  tags: jid
- name: Install jid
  unarchive:
    src: "/tmp/jid-{{ jid_version }}.zip"
    dest: "/opt/jid-{{ jid_version }}"
    remote_src: yes
  tags: jid
  when: not jid_directory.stat.exists
- name: Symlink default jid
  file:
    src: "jid-{{ jid_version }}"
    dest: "/opt/jid"
    state: link
  tags: jid
- name: Symlink jid bin
  file:
    src: "/opt/jid/jid"
    dest: "/usr/local/bin/jid"
    state: link
  tags: jid
- name: install ripgrep
  block:
  - name: install ripgrep via pkg manager
    apt:
      pkg: ripgrep
    tags: ripgrep
  rescue:
  - name: Download ripgrep {{ ripgrep_version }}
    get_url:
      url: https://github.com/BurntSushi/ripgrep/releases/download/{{ ripgrep_version }}/ripgrep_{{ ripgrep_version }}_amd64.deb
      checksum: "sha1:{{ ripgrep_sha1 }}"
      dest: /tmp/ripgrep_{{ ripgrep_version }}_amd64.deb
    tags: ripgrep
  - name: Install ripgrep {{ ripgrep_version }}
    apt:
      deb: /tmp/ripgrep_{{ ripgrep_version }}_amd64.deb
    tags: ripgrep
- name: Install bump2version aka bumpversion
  include_role:
    name: baztian.pip_venv
    apply:
      tags:
        - bump2version
  vars:
      pkg: bump2version
      version: "{{ bump2version_version }}"
      bin: bumpversion
  tags: bump2version
- name: Install adr-tools
  include_role:
    name: baztian.adr_tools
